name: E2E Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, deploy]
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: codingagent
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          pip install pytest pytest-asyncio pytest-cov
          cd server && pip install -r requirements.txt && cd ..
          cd cli && npm ci && cd ..
          cd web-ui && npm ci && cd ..

      - name: Setup test environment
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/codingagent
          REDIS_URL: redis://localhost:6379
        run: |
          echo "Test environment configured"

      - name: Run unit tests (mocked)
        env:
          SKIP_REAL_APIS: "true"
        run: |
          pytest tests/e2e/test_automation_pipeline.py::TestMockAutomationPipeline -v

      - name: Run integration tests
        env:
          SKIP_REAL_APIS: "false"
          TEST_NOTION_API_KEY: ${{ secrets.TEST_NOTION_API_KEY }}
          TEST_VERCEL_TOKEN: ${{ secrets.TEST_VERCEL_TOKEN }}
          TEST_NOTION_PAGE_ID: ${{ secrets.TEST_NOTION_PAGE_ID }}
        run: |
          pytest tests/e2e/test_automation_pipeline.py::TestAutomationPipeline -v || echo "Integration tests skipped (no API keys)"
        continue-on-error: true

      - name: Run E2E test coverage
        run: |
          pytest tests/e2e/ --cov=server --cov-report=xml --cov-report=html -v

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: e2e
          name: E2E test coverage
        continue-on-error: true

      - name: Check test results
        if: failure()
        run: |
          echo "❌ E2E tests failed"
          exit 1

      - name: Success
        if: success()
        run: |
          echo "✅ E2E tests passed"

  ephemeral-container-test:
    name: Ephemeral Container Test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker
        run: |
          docker info

      - name: Build ephemeral container
        run: |
          docker build -t coding-agent-test -f .devcontainer/Dockerfile .

      - name: Run tests in container
        run: |
          docker run --rm \
            -e DATABASE_URL=postgresql://postgres:postgres@postgres:5432/codingagent \
            -e SKIP_REAL_APIS=true \
            coding-agent-test \
            pytest tests/e2e/ -v

      - name: Cleanup
        if: always()
        run: |
          docker rmi coding-agent-test || true

